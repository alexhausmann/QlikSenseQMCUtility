<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" >
<head>
<head lang="en">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <meta charset="UTF-8">
    <link rel="stylesheet" href="leonardo-ui.css" type="text/css"/>
    <link rel="stylesheet" href="style.css" type="text/css"/>
    <link rel="stylesheet" href="prism.css" type="text/css"/>
    <link rel="stylesheet" href="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css">



    <title>Qlik Sense QMC Utility</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
	<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>
    <script src="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js"></script>
	<script>

	$(document).ready(function()
	{
        
		$.get("http://localhost:8186/getsheets", function(data, status)
		{
        	alert("Data: " + JSON.parse(data) + "\nStatus: " + status);
			
            //alert(JSON.stringify(data1));
            //data = JSON.parse(data1);
            //alert(data1.length);
            //data = JSON.parse(data1);
            //alert(data.length);
            //alert(data[0].MetricName);

            //alert("Data2: " + data );

			var tabledata = "";
			
			for(var i = 0; i < data.length; i++)
			{
				var row = data[i];
				var tr = document.createElement("tr");


                       var td = document.createElement("td"); td.innerHTML = row.ID; tr.appendChild(td);
                       var td = document.createElement("td"); td.innerHTML = row.MetricSubject; tr.appendChild(td);
                       var td = document.createElement("td"); td.innerHTML = row.MetricType; tr.appendChild(td);
                       var td = document.createElement("td"); td.innerHTML = row.MetricName; tr.appendChild(td);
                       var td = document.createElement("td"); td.innerHTML = row.MetricFormula; tr.appendChild(td);
                       var td = document.createElement("td"); td.innerHTML = row.MetricDescription; tr.appendChild(td);
                       var td = document.createElement("td"); td.innerHTML = row.MetricOwner; tr.appendChild(td);
                       var td = document.createElement("td"); td.innerHTML = row.MetricTags; tr.appendChild(td);

				$('#tabledata').append(tr);
			}
		});
		
		
        $(document).click(function (e) {
                
                revert();
        });

        function revert() {
            
            $("#tabledata .editfield").each(function () {
                var $td = $(this).closest('td');
                $td.empty();
                $td.text($td.data('oldText'));
                $td.data('editing', false);

                console.log('Edit canceled.');
            });
        };


        //$("#tabledata td").click(function (e) {
        $("#tabledata").delegate('td', 'click', function(e){

            //alert("sss");
            // consuem event
            e.preventDefault();
            e.stopImmediatePropagation();

            $td = $(this);

            //alert($td);

            // if already editing, do nothing.
            if ($td.data('editing')) return;
            // mark as editing
            $td.data('editing', true);

            // get old text
            var txt = $td.text();

            // store old text
            $td.data('oldText', txt);

            // make input
            var $input = $('<input type="text" class="lui-textarea">');
            $input.val(txt);

            // clean td and add the input
            $td.empty();
            $td.append($input);
        });

        
    

        function save($input) {
            var val = $input.val();
                var $td = $input.closest('td');
                $td.empty();
                $td.text(val);
                $td.data('editing', false);

                // send json or whatever
                //alert("asdf");
                //var cell = $(this).closest('td');
                //var cellIndex = cell[0].cellIndex;

                //var row = cell.closest('tr');
                //var rowIndex = row[0].rowIndex;


                var o = {};
                //o.row = $td.closest('tr').find(":first-child");
                o.row = $td.siblings(":first").text();
                o.col = $td[0].cellIndex;
                o.value = val;

//                alert(o.row);

                $.post("http://localhost:8185/cell", o);
                
                // Do something with the result
                console.log('Value changed');    
        };

        //$('#tabledata td').on('keyup', 'input.editfield', function (e) {
        $("#tabledata").delegate('td', 'keyup', 'input.editfield', function (e) {
            //alert("s1122");
           if (e.which == 13) {
                // save
                $input = $(e.target);
                save($input);
            } else if (e.which == 27) {
                // revert
                revert();
            }
        });

         
    });
  
    
    function adddata()
    {
        var tr = document.createElement("tr");
        var td = null;

        td = document.createElement("td"); td.innerHTML = "*new*"; tr.appendChild(td);
        for(var j = 1; j < 8; j++)
        {
             td = document.createElement("td"); td.innerHTML = "ChangeMe"; tr.appendChild(td);
        }
        $('#tabledata').append(tr);

        var o = {};
        //o.row = $td.closest('tr')[0].rowIndex;
        //o.col = $td[0].cellIndex;
        //o.value = val;

        $.post("http://localhost:8185/addrow", o);

    };

    function updateMasterLib()
    {
        $.post("http://localhost:8590/masterlib/reload", function(result,strStatus,xhr)
            {
                if(xhr.status==200)
                {
                     $('.lui-dialog__body:contains(please wait)').text('Reloading app was successful, now updating the master library.');
                     $.post("http://localhost:8590/masterlib/update/all", function(result,strStatus,xhr)
                     {
                        if(xhr.status==200)
                {
                        $('.lui-dialog__body:contains(Reloading app)').text('Reloading app was successful, now updating the master library. Completed updating metrics in apps.')
                    }
                    else
                    {
                        $('.lui-dialog__body:contains(Reloading app)').text('Reloading app was successful, now updating the master library. Could not update metrics in app.')
                    }
                     });
                }
                else
                {
                     $('.lui-dialog__body:contains(please wait)').text('Reloading app failed.');
                }
            });
//        alert("Master Libraries Updating!...");
    };

    function deletedata()
    {
        var deleteID = window.prompt("ID to delete:", "");
        if(deleteID)
        {
            var o = {};
                //o.row = $td.closest('tr').find(":first-child");
                o.row = deleteID;
                //o.col = $td[0].cellIndex;
                //o.value = val;

                //alert(o.row);

            $.post("http://localhost:8185/deleterow", o);

            //$("#tabledata tr td:first").filter(function(){return $(this).text() === deleteID}).parent().empty();

        }

    }

    function savedata()
    {
        /*var resultArray = [];

        $("#tabledata tr").each(function(){
                    var innerArray = [];

            //alert("Here");

            $(this).find('td').each(function () {

                //console.log($(this).text());

                innerArray.push($(this).text());
            });

            resultArray.push(innerArray);
        });*/

        /*var tbl = $('#tabledata tr').get().map(function(row) {
          return $(row).find('td').get().map(function(cell) {
            return $(cell).html();
          });
        });

        //console.log(resultArray);
        var json = JSON.stringify(tbl);
        console.log(json);*/

        
        $.get("http://localhost:8185/save", function(data, status)
        {
            //alert("Data: " + data + "\nStatus: " + status);
            //alert(data.length);
            /*var tabledata = "";
            
            for(var i = 0; i < data.length; i++)
            {
                var row = data[i];
                var tr = document.createElement("tr");

                for(var j = 0; j < row.length; j++)
                {
                    var td = document.createElement("td"); td.innerHTML = row[j]; tr.appendChild(td);
                }
                $('#tabledata').append(tr);
            }*/
        });

    };
  
</script>
	
</head>
<body>
<def>
</def>
<div id="header" class="frame">
    <div id="header-text"><h1 style='color: #FFFFFF; font-size: 23pt; font-weight: bold; font-family: Arial;'>Qlik Sense QMC Utility</h1></div>
</div>
    <!--div id="table-wrapper" border="1px"-->
    <div id="table-scroll">
	<table id="tabledata" class="table table-bordered table-striped" >
        <tr id="tableheader">
            <td>MetricID</td>
			<td>MetricSubject</td>
			<td>MetricType</td>
			<td>MetricName</td>
			<td>MetricFormula</td>
			<td>MetricDescription</td>
			<td>MetricOwner</td>
			<td>MetricTags</td>
        </tr>
    </table>
</div>
    <!--/div-->
<div id="footer">
  <div id="button-bar">
    <button class="lui-button  lui-button--toolbar-inverse" onclick="adddata()">Add Metric</button>
    <button class="lui-button" onclick="deletedata()">Delete Metric</button>
    <button class="lui-button  lui-button--toolbar-inverse" onclick="updateMasterLib()" id="dialog">Update Master Libraries</button>
<div class="dialog-content" style="display: none;" contenteditable="true">
    <div class="lui-dialog  lui-dialog--inverse" style="width: 600px;">
        <div class="lui-dialog__header">
            <div class="lui-dialog__title">Status</div>
        </div>
        <div class="lui-dialog__body">
            ... loading ... please wait.
        </div>
        <div class="lui-dialog__footer">
            <button class="lui-button  lui-button--inverse  close-button">OK</button>
        </div>
    </div>
</div>

    <button class="lui-button  lui-button--toolbar-inverse" id="dialog">About</button>
<div class="dialog-content" style="display: none;">
    <div class="lui-dialog  lui-dialog--inverse" style="width: 600px;">
        <div class="lui-dialog__header">
            <div class="lui-dialog__title">Usage</div>
        </div>
        <div class="lui-dialog__body">
            Use this Qlik Power Tool at your own risk.  It is not supported by Qlik.
        </div>
        <div class="lui-dialog__footer">
            <button class="lui-button  lui-button--inverse  close-button">OK</button>
        </div>
    </div>
</div>


      
</div>
</div>


<script>
        var dialogTriggers = document.querySelectorAll( "#dialog" );
    dialogTriggers = [].slice.apply( dialogTriggers ); // convert to array
    dialogTriggers.forEach( function ( element ) {
        element.addEventListener( "click", function() {
            var dialog = leonardoui.dialog( {
                content: element.nextElementSibling.innerHTML,
                shadow: true,
                closeOnEscape: true
            } );
            // Dialog was shown
            var closeButton = dialog.element.querySelectorAll( ".close-button" )[0];
            closeButton.focus();
            closeButton.addEventListener( "click", function() {
                dialog.close();
            } );
        } );
    } );
</script>



<script src="js/leonardo-ui.js"></script>

<script src="js/prism.js"></script>

	
</body>
</html>
		